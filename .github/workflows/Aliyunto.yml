name:Aliyunto

on:
  push:
    tags:
      - "v*"
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    name: Build artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"

      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/nezha-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/dashboard

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  release-docker:
    runs-on: ubuntu-latest
    needs: build
    name: Release to Aliyun ACR
    env:
      ALIYUN_REGISTRY: crpi-x68pqc6t5zexwzms.cn-guangzhou.personal.cr.aliyuncs.com
      IMAGE_NAME: auto-reply-xianyu/xianyu-auto-reply
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Extract tag name
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})
          else
            TAG_NAME=$(echo ${GITHUB_REF#refs/heads/})
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Using tag: $TAG_NAME"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push to Aliyun ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}
            ${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Verify pushed images
        run: |
          echo "成功推送以下镜像到阿里云容器镜像服务："
          echo "${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}"
          echo "${{ env.ALIYUN_REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
